#BlueJ class context
comment0.target=CSVAssignment
comment0.text=\n\ Write\ a\ description\ of\ CSVAssignment\ here.\n\ \n\ @author\ (Paul\ Jones)\ \n\ @version\ (2019-12-12)\n\ coldestHourInFile\ -\ \ one\ parameter,\ a\ CSVParser\ named\ parser\ -\ return\ CSVRecord\ with\ record\ of\ coldest\ TEMP\ in\ ONE\ file\n\ testColdestHourInFile()\ \ -\ void\ method\ for\ testing\ coldestHourInFile\n\ \n\ fileWithColdestTemperature\ -\ no\ parameters\ -\ return\ string\ with\ name\ of\ file\ which\ has\ coldest\ TEMP\ from\ MANY\ files\ selected.\n\ testFileWithColdestTemperature()\ -\ void\ method\ for\ testing\ fileWithColdestTemperature,\ prints\ out\ all\ TEMP's\ for\ the\ file\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ with\ the\ coldest\ day.\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \n\ lowestHumidityInFile\ -\ one\ parameter,\ a\ CSVParser\ named\ parser\ -\ return\ CSVRecord\ with\ record\ of\ coldest\ HUMIDITY\ in\ ONE\ file\n\ testLowestHumidityInFile()\ -\ void\ method\ for\ testing\ lowestHumidityInFile\n\ \n\ lowestHumidityInManyFiles\ -\ no\ parameters\ -\ This\ method\ returns\ a\ CSVRecord\ that\ has\ the\ lowest\ humidity\ from\ MANY\ files\ selected.\n\ testLowestHumidityInManyFiles()\ -\ void\ method\ to\ print\ the\ lowest\ humidity\ AND\ the\ time\ the\ lowest\ humidity\ occurred.\n\ \n\ averageTemperatureInFile\ -\ one\ parameter,\ a\ CSVParser\ named\ parser\ -\ returns\ a\ double\ that\ represents\ the\ average\ TEMP\ in\ ONE\ file.\ \n\ testAverageTemperatureInFile()\ -\ void\ method\ -\ Prints\ the\ average\ temperature\ for\ the\ ONE\ file\ selected.\n\ \n\ averageTemperatureWithHighHumidityInFile\ -\ two\ parameters\ -\ a\ CSVParser\ named\ parser\ and\ an\ integer\ named\ value.\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ returns\ a\ double\ that\ represents\ the\ average\ temperature\ of\ only\ those\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ temperatures\ when\ the\ humidity\ was\ greater\ than\ or\ equal\ to\ value.\n\ testAverageTemperatureWithHighHumidityInFile()\ -\ void\ method\ to\ test\ averageTemperatureWithHighHumidityInFile\ \n\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ HELPER\ Function(s)\n\ getLargeOrSmallOfTwo\ -\ \ 4\ parameters\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ CSVRecord\ currentRow\ \ \ \ \ \ \ \ \ \ \ \ Current\ CSV\ record\ to\ test\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ CSVRecord\ largeOrSmallSoFar\ \ \ \ \ largest\ or\ smallest\ record\ so\ far\ -\ always\ starts\ as\ NULL\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ String\ largeSmall\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ DO\ we\ wants\ largest\ or\ smallest\ record\ for\ selected\ field\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ String\ field\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ The\ field\ name(Case\ sensitive)\ in\ CSV\ file\ we\ are\ looking\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ largest\ or\ smallest\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Returns\ the\ CSVRecord\ for\ largest\ or\ smallest\ record\n
comment1.params=x
comment1.target=void\ print(java.lang.Object)
comment10.params=
comment10.target=void\ testLowestHumidityInFile()
comment11.params=
comment11.target=void\ testLowestHumidityInManyFiles()
comment12.params=
comment12.target=void\ testAverageTemperatureInFile()
comment13.params=
comment13.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment14.params=currentRow\ largeOrSmallSoFar\ largeSmall\ field
comment14.target=org.apache.commons.csv.CSVRecord\ getLargeOrSmallOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord,\ java.lang.String,\ java.lang.String)
comment2.params=parser
comment2.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment3.params=
comment3.target=java.lang.String\ fileWithColdestTemperature()
comment4.params=parser
comment4.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment5.params=
comment5.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment6.params=parser
comment6.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment7.params=parser\ value
comment7.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment8.params=
comment8.target=void\ testColdestHourInFile()
comment9.params=
comment9.target=void\ testFileWithColdestTemperature()
numComments=15
